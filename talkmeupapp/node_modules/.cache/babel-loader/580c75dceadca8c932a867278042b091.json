{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lsslg\\\\Desktop\\\\talkmeupapp\\\\src\\\\ResultsPage.js\";\nimport React from 'react';\n\nfunction Result(props) {\n  let media = undefined;\n\n  switch (props.type) {\n    default:\n    case 'image':\n      media = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.src,\n        alt: \"An image relating to \" + props.searchedTerm,\n        onClick: props.toggleInterest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 'video':\n      media = /*#__PURE__*/_jsxDEV(\"video\", {\n        src: props.src,\n        alt: \"A video relating to \" + props.searchedTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Result\",\n    children: [media, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: props.toggleInterest,\n      checked: props.interest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Result;\n\nclass ResultsPage extends React.Component {\n  constructor(props) {\n    super(props); // copy over the results prop into state so we can easily change interest\n\n    this.state = {\n      results: this.props.results.slice()\n    };\n\n    this.goBack = event => {\n      // show/remove interest for all results\n      // this can be optimized a little further but it is probably\n      // not worth it for this small of a project\n      this.state.results.forEach(element => {\n        if (element.interest) {\n          this.props.showInterest(element.src);\n        } else {\n          this.props.removeInterest(element.src);\n        }\n      });\n      this.props.goBack(); // goes back to the other page\n\n      event.preventDefault();\n    };\n\n    this.getToggleInterest = (i, interest) => {\n      return () => {\n        const results = this.state.results.slice();\n        results[i] = Object.assign({}, results[i]);\n        results[i].interest = !interest;\n        this.setState({\n          results: results\n        });\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ResultsGrid\",\n        children: this.state.results.map((result, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Result, {\n            searchedTerm: this.props.searchedTerm,\n            src: result.src,\n            type: result.type,\n            interest: result.interest,\n            toggleInterest: this.getToggleInterest(i, result.interest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, result.src, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"GoBackButton\",\n          type: \"button\",\n          value: \"Go Back\",\n          onClick: this.goBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/ResultsPage.js"],"names":["React","Result","props","media","undefined","type","src","searchedTerm","toggleInterest","interest","ResultsPage","Component","constructor","state","results","slice","goBack","event","forEach","element","showInterest","removeInterest","preventDefault","getToggleInterest","i","Object","assign","setState","render","map","result"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction Result(props) {\r\n    let media = undefined;\r\n\r\n    switch (props.type) {\r\n        default:\r\n        case 'image':\r\n            media = <img src={props.src} alt={\"An image relating to \" + props.searchedTerm} onClick={props.toggleInterest}/>;\r\n            break;\r\n        case 'video':\r\n            media = <video src={props.src} alt={\"A video relating to \" + props.searchedTerm}/>\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Result\">\r\n            {media}\r\n            <input type='checkbox'\r\n                onChange={props.toggleInterest}\r\n                checked={props.interest}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ResultsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // copy over the results prop into state so we can easily change interest\r\n        this.state = {results: this.props.results.slice()};\r\n        this.goBack = (event) => {\r\n            // show/remove interest for all results\r\n            // this can be optimized a little further but it is probably\r\n            // not worth it for this small of a project\r\n            this.state.results.forEach(element => {\r\n                if (element.interest) {\r\n                    this.props.showInterest(element.src);\r\n                } else {\r\n                    this.props.removeInterest(element.src);\r\n                }\r\n            });\r\n\r\n            this.props.goBack(); // goes back to the other page\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.getToggleInterest = (i, interest) => {\r\n            return () => {\r\n                const results = this.state.results.slice();\r\n                results[i] = Object.assign({}, results[i]);\r\n                results[i].interest = !interest;\r\n                this.setState({results: results});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='ResultsGrid'>\r\n                    {this.state.results.map((result, i) =>\r\n                        <div key={result.src}>\r\n                            <Result\r\n                                searchedTerm={this.props.searchedTerm}\r\n                                src={result.src}\r\n                                type={result.type}\r\n                                interest={result.interest}\r\n                                toggleInterest={this.getToggleInterest(i, result.interest)}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <input className=\"GoBackButton\" type='button' value='Go Back' onClick={this.goBack}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}