{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lsslg\\\\Desktop\\\\talkmeupapp\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js';\nimport ResultsPage from './ResultsPage.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n\n    this.state = {\n      curPage: 'search',\n      interests: {},\n      searchedTerm: \"\"\n    };\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.showInterest = this.showInterest.bind(this);\n  }\n\n  searchForTerm(term) {} // showIntererst\n  // adds the link to the interests object in an array with key term\n  // return true iff state updated\n\n\n  showInterest(term, link) {\n    let newInterests = undefined;\n\n    if (this.state.interests[term] === undefined) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n\n      newInterests[term] = [link];\n    } else if (!this.state.interests[term].includes(link)) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n\n      newInterests[term].push(link);\n    } else {\n      return false;\n    }\n\n    this.setState({\n      interests: newInterests\n    });\n    return true;\n  } // removes the link from \n\n\n  removeInterest(term, link) {\n    const inters = this.state.interests;\n\n    if (inters[term] !== undefined) {\n      const index = inters[term].indexOf(link);\n\n      if (index !== -1) {\n        const newInterests = Object.assign({}, inters);\n        const newArr = inters[term].slice();\n        newArr.splice(index, 1); // delete the link\n\n        if (newArr.length == 0) {\n          delete newInterests[term];\n        } else {\n          newInterests[term] = newArr;\n        }\n\n        this.setState({\n          interests: newInterests\n        });\n      }\n    }\n  }\n\n  render() {\n    switch (this.state.curPage) {\n      default:\n        this.setState({\n          curPage: 'search'\n        });\n      // falls through\n\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(SearchPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(ResultsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/App.js"],"names":["React","SearchPage","ResultsPage","App","Component","constructor","props","state","curPage","interests","searchedTerm","searchForTerm","bind","showInterest","term","link","newInterests","undefined","Object","assign","includes","push","setState","removeInterest","inters","index","indexOf","newArr","slice","splice","length","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js'\nimport ResultsPage from './ResultsPage.js'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n    this.state = {curPage: 'search', interests: {}, searchedTerm: \"\"};\n\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.showInterest = this.showInterest.bind(this);\n  }\n\n  searchForTerm(term) {\n\n  }\n\n  // showIntererst\n  // adds the link to the interests object in an array with key term\n  // return true iff state updated\n  showInterest(term, link) {\n    let newInterests = undefined;\n    if (this.state.interests[term] === undefined) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n      newInterests[term] = [link];\n    } else if (!this.state.interests[term].includes(link)) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n      newInterests[term].push(link);\n    } else {\n      return false;\n    }\n\n    this.setState({interests: newInterests});\n    return true;\n  }\n\n  // removes the link from \n  removeInterest(term, link) {\n    const inters = this.state.interests;\n    if (inters[term] !== undefined) {\n      const index = inters[term].indexOf(link);\n      if (index !== -1) {\n        const newInterests = Object.assign({}, inters);\n        const newArr = inters[term].slice();\n        newArr.splice(index, 1); // delete the link\n        if (newArr.length == 0) {\n          delete newInterests[term];\n        } else {\n          newInterests[term] = newArr;\n        }\n\n        this.setState({interests: newInterests});\n      }\n    }\n  }\n\n  render() {\n    switch(this.state.curPage) {\n      default:\n        this.setState({curPage: 'search'});\n        // falls through\n      case 'search':\n        return <SearchPage/>;\n      case 'results':\n        return <ResultsPage/>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}