{"ast":null,"code":"import _classCallCheck from\"C:/Users/lsslg/Desktop/talkmeupapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/lsslg/Desktop/talkmeupapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/lsslg/Desktop/talkmeupapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/lsslg/Desktop/talkmeupapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/lsslg/Desktop/talkmeupapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';function Result(props){var media=null;switch(props.type){default:console.error(\"Unkown result type: \"+props.type);break;case'image':media=/*#__PURE__*/_jsx(\"img\",{className:\"ResultMedia\",src:props.src,alt:\"An image relating to \"+props.searchedTerm/*onClick={() => props.setInterest(!props.interest)}*/});break;case'video':media=/*#__PURE__*/_jsx(\"div\",{className:\"ResultMedia\",dangerouslySetInnerHTML:{__html:props.player}});// embed from youtube\nbreak;}return/*#__PURE__*/_jsxs(\"div\",{className:\"Result\",children:[/*#__PURE__*/_jsx(\"div\",{children:media}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:props.interest?\"Interested!\":\"Not Interested\",onClick:function onClick(event){props.setInterest(!props.interest);event.preventDefault();},style:props.interest?{color:\"green\"}:{color:\"red\"}})]});}var ResultsPage=/*#__PURE__*/function(_React$Component){_inherits(ResultsPage,_React$Component);var _super=_createSuper(ResultsPage);function ResultsPage(props){var _this;_classCallCheck(this,ResultsPage);_this=_super.call(this,props);_this.state={results:_this.props.results.slice()};_this.state.results.sort(function(){return Math.random()-5;});// sorts randomly\n_this.getSetInterest=function(index){return function(interest){var results=_this.state.results.slice();results[index]=Object.assign({},results[index]);results[index].interest=interest;_this.setState({results:results});console.log(\"Setting interest of \"+results[index].src+\" to \"+interest);};};_this.goBack=_this.goBack.bind(_assertThisInitialized(_this));return _this;}_createClass(ResultsPage,[{key:\"goBack\",value:function goBack(){this.props.setInterests(this.props.searchedTerm,this.state.results.filter(function(result){return result.interest;}).map(function(result){return result.src;}));this.props.goBack();}// this is needed because the google and youtube results\n// come in at different times so\n// this is called when a new batch of results comes back\n// from google, and it updates this.state.results\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(this.props.results!==prevProps.results){// props results was updated\n// copy over the values + shuffle.\nvar results=this.props.results.slice();results.sort(function(){return Math.random()-0.5;});this.setState({results:results});}}},{key:\"render\",value:function render(){var _this2=this;// added later so it is a little out of place, but it works\nvar copy=this.state.results.slice();var results2D=[];while(copy.length){results2D.push(copy.splice(0,3));}return/*#__PURE__*/_jsxs(\"div\",{className:\"ResultsPage\",children:[/*#__PURE__*/_jsx(\"table\",{className:\"ResultsMatrix\",children:/*#__PURE__*/_jsx(\"tbody\",{children:results2D.map(function(row,rowIndex){return/*#__PURE__*/_jsx(\"tr\",{className:\"ResultsRow\",children:row.map(function(result,colIndex){return/*#__PURE__*/_jsx(\"td\",{className:\"ResultsCell\",children:/*#__PURE__*/_jsx(Result,{searchedTerm:_this2.props.searchedTerm,src:result.src,type:result.type,interest:result.interest,player:result.player// undefined for image, embedHtml for video.\n,setInterest:_this2.getSetInterest(rowIndex*3+colIndex)})},rowIndex*3+colIndex);})},rowIndex);})})}),/*#__PURE__*/_jsx(\"input\",{className:\"GoBackButton\",type:\"button\",value:\"Go Back\",onClick:this.goBack})]});}}]);return ResultsPage;}(React.Component);export default ResultsPage;","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/ResultsPage.js"],"names":["React","Result","props","media","type","console","error","src","searchedTerm","__html","player","interest","event","setInterest","preventDefault","color","ResultsPage","state","results","slice","sort","Math","random","getSetInterest","index","Object","assign","setState","log","goBack","bind","setInterests","filter","result","map","prevProps","prevState","snapshot","copy","results2D","length","push","splice","row","rowIndex","colIndex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction Result(props) {\r\n    let media = null;\r\n    switch (props.type) {\r\n        default:\r\n            console.error(\"Unkown result type: \" + props.type);\r\n            break;\r\n        case 'image':\r\n            media = <img className=\"ResultMedia\" src={props.src} alt={\"An image relating to \" + props.searchedTerm}\r\n                /*onClick={() => props.setInterest(!props.interest)}*/ />;\r\n            break;\r\n        case 'video':\r\n            media = <div className=\"ResultMedia\" dangerouslySetInnerHTML={{__html: props.player}}/>; // embed from youtube\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Result\">\r\n            <div>\r\n                {media}\r\n            </div>\r\n            <input\r\n                type='button'\r\n                value={props.interest ? \"Interested!\" : \"Not Interested\"}\r\n                onClick={(event) => {props.setInterest(!props.interest); event.preventDefault()}}\r\n                style={props.interest ? {color:\"green\"} : {color:\"red\"}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ResultsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {results: this.props.results.slice()};\r\n        this.state.results.sort(() => Math.random() - 5); // sorts randomly\r\n\r\n        this.getSetInterest = (index) => {\r\n            return (interest) => {\r\n                const results = this.state.results.slice();\r\n                results[index] = Object.assign({}, results[index]);\r\n                results[index].interest = interest;\r\n                this.setState({results: results});\r\n                console.log(\"Setting interest of \" + results[index].src + \" to \" + interest);\r\n            }\r\n        }\r\n\r\n        this.goBack = this.goBack.bind(this);\r\n    }\r\n\r\n    goBack() {\r\n        this.props.setInterests(this.props.searchedTerm, this.state.results.filter(result => result.interest).map(result => result.src));\r\n        this.props.goBack();\r\n    }\r\n\r\n    // this is needed because the google and youtube results\r\n    // come in at different times so\r\n    // this is called when a new batch of results comes back\r\n    // from google, and it updates this.state.results\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.results !== prevProps.results) {\r\n            // props results was updated\r\n            // copy over the values + shuffle.\r\n            const results = this.props.results.slice();\r\n            results.sort(() => Math.random() - 0.5);\r\n            this.setState({results: results});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // added later so it is a little out of place, but it works\r\n        const copy = this.state.results.slice();\r\n        const results2D = [];\r\n        while(copy.length) results2D.push(copy.splice(0,3));\r\n\r\n        return (\r\n            <div className=\"ResultsPage\">\r\n                <table className=\"ResultsMatrix\"><tbody>\r\n                    {results2D.map((row, rowIndex) =>\r\n                        <tr className=\"ResultsRow\" key={rowIndex}>\r\n                            {row.map((result, colIndex) => <td className=\"ResultsCell\" key={rowIndex * 3 + colIndex}><Result\r\n                                searchedTerm={this.props.searchedTerm}\r\n                                src={result.src}\r\n                                type={result.type}\r\n                                interest={result.interest}\r\n                                player={result.player} // undefined for image, embedHtml for video.\r\n                                setInterest={this.getSetInterest(rowIndex * 3 + colIndex)}\r\n                            /></td>)}\r\n                        </tr>\r\n                    )}\r\n                </tbody></table>\r\n                <input className='GoBackButton' type='button' value='Go Back' onClick={this.goBack}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}