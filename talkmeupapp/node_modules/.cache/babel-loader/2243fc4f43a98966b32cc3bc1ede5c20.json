{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lsslg\\\\Desktop\\\\talkmeupapp\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js';\nimport ResultsPage from './ResultsPage.js';\nconst GOOGLE_API_KEY = 'AIzaSyAM0zBXsd42sz2F_EcHnQMfr09CJ0pirlY'; // would make this an env var in a bigger project\n\nconst YOUTUBE_API_KEY = 'AIzaSyAee85G7oYuStRYoBOlgvpp_ky0MKgbqYQ'; // ^\n\nconst GOOGLE_CX = 'c55eb86d669bd3886'; // would make this an env var in a bigger project\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n\n    this.state = {\n      curPage: 'search',\n      interests: {},\n      searchedTerm: \"\",\n      results: []\n    };\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.setInterests = this.setInterests.bind(this);\n  }\n\n  searchForTerm(term) {\n    this.setState({\n      curPage: 'results',\n      searchedTerm: term\n    }); // results properties:\n    // src: link to the image/video\n    // type: \"image\" or \"video\"\n    // interest: bool\n\n    console.log(\"Searching for \" + term); // search for term\n    // for some reason the google API uses http2\n    // and that is not usable by an app created by create-react-app,\n    // so i will handle the http request directly (sad)\n    // the same problem happens with youtube\n\n    const req = new XMLHttpRequest(); // search for 7 images relating to term on cx, a custom search engine\n\n    req.open(\"GET\", \"https://customsearch.googleapis.com/customsearch/v1?key=\" + GOOGLE_API_KEY + \"&cx=\" + GOOGLE_CX + \"&q=\" + term + \"&num=7&searchType=IMAGE\");\n\n    req.onreadystatechange = () => {\n      if (req.readyState === XMLHttpRequest.DONE) {\n        const json = JSON.parse(req.responseText); // valid input is kind of assumed\n\n        if (json[\"error\"] === undefined) {\n          const results = json.items.map(result => {\n            return {\n              src: result.link,\n              type: \"image\"\n            };\n          });\n          console.log(results);\n          const linksWithInterest = this.state.interests[term];\n\n          if (linksWithInterest !== undefined) {\n            results.forEach(result => result.interest = linksWithInterest.includes(result.src));\n          }\n\n          this.setState({\n            results: this.state.results.concat(results)\n          });\n        } else {\n          console.error(\"unable to search google images for \" + term);\n          console.error(req.responseText);\n        }\n      }\n    }; // search for 2 videos on youtube\n\n\n    const req2 = new XMLHttpRequest();\n    req2.open(\"GET\", \"https://www.googleapis.com/youtube/v3/search?key=\" + YOUTUBE_API_KEY + \"&type=video&videoEmbeddable=true&maxResults=2&q=\" + term);\n\n    req2.onreadystatechange = () => {\n      if (req2.readyState === XMLHttpRequest.DONE) {\n        const json = JSON.parse(req2.responseText);\n\n        if (json[\"kind\"] === \"youtube#video\") {\n          const results = json.items.map(result => {\n            return {\n              src: \"youtu.be/\" + result.id,\n              player: result.player.embedHtml,\n              type: \"video\"\n            };\n          });\n          const linksWithInterest = this.state.interests[term];\n\n          if (linksWithInterest !== undefined) {\n            results.forEach(result => result.interest = linksWithInterest.includes(result.src));\n          }\n\n          this.setState({\n            results: this.state.results.concat(results)\n          });\n        } else {\n          console.error(\"unable to search youtube for \" + term);\n          console.error(req2.responseText);\n        }\n      }\n    };\n\n    req.send();\n    req2.send();\n  } // links are the links with interest\n\n\n  setInterests(term, links) {\n    const interests = Object.assign({}, this.state.interests);\n\n    if (links.length > 0) {\n      interests[term] = links;\n    } else if (interests[term] !== undefined) {\n      delete interests[term];\n    }\n\n    this.setState({\n      interests: interests\n    });\n  }\n\n  render() {\n    switch (this.state.curPage) {\n      default:\n        console.error('Unknown page ' + this.state.curPage);\n        this.setState({\n          curPage: 'search'\n        });\n      // falls through\n\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SearchPage, {\n            searchForTerm: this.searchForTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"InterestsButton\",\n            type: \"button\",\n            value: \"Get Interests (JSON)\",\n            onClick: () => this.setState({\n              curPage: 'interests'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ResultsPage, {\n            searchedTerm: this.state.searchedTerm,\n            results: this.state.results,\n            setInterests: this.setInterests,\n            goBack: () => this.setState({\n              curPage: 'search',\n              results: []\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this);\n\n      case 'interests':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: JSON.stringify(this.state.interests)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"GoBackButton\",\n            type: \"button\",\n            value: \"Go Back\",\n            onClick: () => this.setState({\n              curPage: 'search'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/App.js"],"names":["React","SearchPage","ResultsPage","GOOGLE_API_KEY","YOUTUBE_API_KEY","GOOGLE_CX","App","Component","constructor","props","state","curPage","interests","searchedTerm","results","searchForTerm","bind","setInterests","term","setState","console","log","req","XMLHttpRequest","open","onreadystatechange","readyState","DONE","json","JSON","parse","responseText","undefined","items","map","result","src","link","type","linksWithInterest","forEach","interest","includes","concat","error","req2","id","player","embedHtml","send","links","Object","assign","length","render","stringify"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js'\nimport ResultsPage from './ResultsPage.js'\n\nconst GOOGLE_API_KEY = 'AIzaSyAM0zBXsd42sz2F_EcHnQMfr09CJ0pirlY' // would make this an env var in a bigger project\nconst YOUTUBE_API_KEY = 'AIzaSyAee85G7oYuStRYoBOlgvpp_ky0MKgbqYQ' // ^\nconst GOOGLE_CX = 'c55eb86d669bd3886' // would make this an env var in a bigger project\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n    this.state = {curPage: 'search', interests: {}, searchedTerm: \"\", results: []};\n\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.setInterests = this.setInterests.bind(this);\n  }\n\n  searchForTerm(term) {\n    this.setState({curPage: 'results', searchedTerm: term});\n\n    // results properties:\n    // src: link to the image/video\n    // type: \"image\" or \"video\"\n    // interest: bool\n    console.log(\"Searching for \" + term);\n\n    // search for term\n    // for some reason the google API uses http2\n    // and that is not usable by an app created by create-react-app,\n    // so i will handle the http request directly (sad)\n    // the same problem happens with youtube\n    const req = new XMLHttpRequest();\n    // search for 7 images relating to term on cx, a custom search engine\n    req.open(\"GET\", \"https://customsearch.googleapis.com/customsearch/v1?key=\" + GOOGLE_API_KEY +\n        \"&cx=\" + GOOGLE_CX + \"&q=\" + term + \"&num=7&searchType=IMAGE\");\n    \n    req.onreadystatechange = () => {\n      if (req.readyState === XMLHttpRequest.DONE) {\n        const json = JSON.parse(req.responseText);\n\n        // valid input is kind of assumed\n        if (json[\"error\"] === undefined) {\n          const results = json.items.map(result => { return {src: result.link, type: \"image\"} });\n\n          console.log(results);\n\n          const linksWithInterest = this.state.interests[term];\n          if (linksWithInterest !== undefined) {\n            results.forEach(result => result.interest = linksWithInterest.includes(result.src));\n          }\n          \n          this.setState({results: this.state.results.concat(results)});\n        } else {\n          console.error(\"unable to search google images for \" + term);\n          console.error(req.responseText);\n        }\n      }\n    }\n\n    // search for 2 videos on youtube\n    const req2 = new XMLHttpRequest();\n    req2.open(\"GET\", \"https://www.googleapis.com/youtube/v3/search?key=\" + YOUTUBE_API_KEY +\n        \"&type=video&videoEmbeddable=true&maxResults=2&q=\" + term);\n\n    req2.onreadystatechange = () => {\n      if (req2.readyState === XMLHttpRequest.DONE) {\n        const json = JSON.parse(req2.responseText);\n        if (json[\"kind\"] === \"youtube#video\") {\n          const results = json.items.map(result => { return { src: \"youtu.be/\" + result.id, player: result.player.embedHtml, type: \"video\"}; });\n\n          const linksWithInterest = this.state.interests[term];\n          if (linksWithInterest !== undefined) {\n            results.forEach(result => result.interest = linksWithInterest.includes(result.src));\n          }\n          this.setState({results: this.state.results.concat(results)});\n        } else {\n          console.error(\"unable to search youtube for \" + term);\n          console.error(req2.responseText);\n        }\n      }\n    }\n\n    req.send();\n    req2.send();\n  }\n\n  // links are the links with interest\n  setInterests(term, links) {\n    const interests = Object.assign({}, this.state.interests);\n    if (links.length > 0) {\n      interests[term] = links;\n    } else if (interests[term] !== undefined) {\n      delete interests[term];\n    }\n    this.setState({interests: interests});\n  }\n\n  render() {\n    switch(this.state.curPage) {\n      default:\n        console.error('Unknown page ' + this.state.curPage);\n        this.setState({curPage: 'search'});\n        // falls through\n      case 'search':\n        return (\n          <div>\n            <SearchPage searchForTerm={this.searchForTerm}/>\n            <input className=\"InterestsButton\" type='button' value='Get Interests (JSON)' onClick={() => this.setState({curPage: 'interests'})}/>\n          </div>\n        );\n      case 'results':\n        return (\n          <div>\n            <ResultsPage\n              searchedTerm={this.state.searchedTerm}\n              results={this.state.results}\n              setInterests={this.setInterests}\n              goBack={() => this.setState({curPage: 'search', results: []})}\n            />\n          </div>\n        );\n      case 'interests':\n        return (\n          <div>\n            <div>\n              <code>{JSON.stringify(this.state.interests)}</code>\n            </div>\n            <input className=\"GoBackButton\" type='button' value='Go Back' onClick={() => this.setState({curPage: 'search'})}/>\n          </div>\n        );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}