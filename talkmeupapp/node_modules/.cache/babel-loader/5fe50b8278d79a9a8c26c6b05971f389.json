{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lsslg\\\\Desktop\\\\talkmeupapp\\\\src\\\\ResultsPage.js\";\nimport React from 'react';\n\nfunction Result(props) {\n  let media = null;\n\n  switch (props.type) {\n    default:\n      console.error(\"Unkown result type: \" + props.type);\n      break;\n\n    case 'image':\n      media = /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ResultMedia\",\n        src: props.src,\n        alt: \"An image relating to \" + props.searchedTerm,\n        onClick: () => props.setInterest(!props.interest)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 'video':\n      media = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ResultMedia\",\n        dangerouslySetInnerHTML: props.player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this);\n      break;\n  }\n\n  console.log(media);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: media\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: props.interest ? \"Interested!\" : \"Not Interested\" // checkmark :)\n      ,\n      onClick: event => {\n        props.setInterest(!props.interest);\n        event.preventDefault();\n      },\n      style: props.interest ? {\n        color: \"green\"\n      } : {\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Result;\n\nclass ResultsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: this.props.results.slice()\n    };\n    this.state.results.sort(() => Math.random() - 5); // sorts randomly\n\n    this.getSetInterest = index => {\n      return interest => {\n        const results = this.state.results.slice();\n        results[index] = Object.assign({}, results[index]);\n        results[index].interest = interest;\n        this.setState({\n          results: results\n        });\n        console.log(\"Setting interest of \" + results[index].src + \" to \" + interest);\n      };\n    };\n\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    this.props.setInterests(this.props.searchedTerm, this.state.results.filter(result => result.interest).map(result => result.src));\n    this.props.goBack();\n  }\n\n  render() {\n    if (this.state.results.length < this.props.results.length) {\n      // props results was updated\n      // need to copy over the extra results we dont have\n      // shuffle them, and then concat them to the state results\n      // and then setState\n      statesResultsIncludes = result => {\n        return this.state.results.reduce(function (acc, elem) {\n          if (!acc) {\n            if (elem.src === result.src) {\n              acc = true;\n            }\n          }\n\n          return acc;\n        }, false);\n      };\n\n      const newResults = this.props.results.filter(result => !statesResultsIncludes(result));\n      newResults.sort(() => Math.random() - 5);\n      this.setState({\n        results: this.state.results.concat(newResults)\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ResultsPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.results.map((result, index) => /*#__PURE__*/_jsxDEV(Result, {\n          searchedTerm: this.props.searchedTerm,\n          src: result.src,\n          type: result.type,\n          interest: result.interest,\n          setInterest: this.getSetInterest(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"GoBackButton\",\n        type: \"button\",\n        value: \"Go Back\",\n        onClick: this.goBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/ResultsPage.js"],"names":["React","Result","props","media","type","console","error","src","searchedTerm","setInterest","interest","player","log","event","preventDefault","color","ResultsPage","Component","constructor","state","results","slice","sort","Math","random","getSetInterest","index","Object","assign","setState","goBack","bind","setInterests","filter","result","map","render","length","statesResultsIncludes","reduce","acc","elem","newResults","concat"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction Result(props) {\r\n    let media = null;\r\n\r\n    switch (props.type) {\r\n        default:\r\n            console.error(\"Unkown result type: \" + props.type);\r\n            break;\r\n        case 'image':\r\n            media = <img className=\"ResultMedia\" src={props.src} alt={\"An image relating to \" + props.searchedTerm} onClick={() => props.setInterest(!props.interest)} />;\r\n            break;\r\n        case 'video':\r\n            media = <div className=\"ResultMedia\" dangerouslySetInnerHTML={props.player}/>;\r\n            break;\r\n    }\r\n\r\n    console.log(media);\r\n\r\n    return (\r\n        <div className=\"Result\">\r\n            <div>\r\n                {media}\r\n            </div>\r\n            <input\r\n                type='button'\r\n                value={props.interest ? \"Interested!\" : \"Not Interested\"} // checkmark :)\r\n                onClick={(event) => {props.setInterest(!props.interest); event.preventDefault()}}\r\n                style={props.interest ? {color:\"green\"} : {color:\"red\"}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ResultsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {results: this.props.results.slice()};\r\n\r\n        this.state.results.sort(() => Math.random() - 5); // sorts randomly\r\n\r\n        this.getSetInterest = (index) => {\r\n            return (interest) => {\r\n                const results = this.state.results.slice();\r\n                results[index] = Object.assign({}, results[index]);\r\n                results[index].interest = interest;\r\n                this.setState({results: results});\r\n                console.log(\"Setting interest of \" + results[index].src + \" to \" + interest);\r\n            }\r\n        }\r\n\r\n        this.goBack = this.goBack.bind(this);\r\n    }\r\n\r\n    goBack() {\r\n        this.props.setInterests(this.props.searchedTerm, this.state.results.filter(result => result.interest).map(result => result.src));\r\n        this.props.goBack();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.results.length < this.props.results.length) {\r\n            // props results was updated\r\n            // need to copy over the extra results we dont have\r\n            // shuffle them, and then concat them to the state results\r\n            // and then setState\r\n            statesResultsIncludes = (result) => {\r\n                return this.state.results.reduce(function(acc, elem) {\r\n                    if (!acc) {\r\n                        if (elem.src === result.src) {\r\n                            acc = true;\r\n                        }\r\n                    }\r\n                    return acc;\r\n                }, false);\r\n            }\r\n\r\n            const newResults = this.props.results.filter((result) => !statesResultsIncludes(result));\r\n            newResults.sort(() => Math.random() - 5);\r\n            this.setState({results: this.state.results.concat(newResults)});\r\n        }\r\n        \r\n        return (\r\n            <div className=\"ResultsPage\">\r\n                <div>\r\n                    {this.state.results.map((result, index) => \r\n                        <Result\r\n                            key={index}\r\n                            searchedTerm={this.props.searchedTerm}\r\n                            src={result.src}\r\n                            type={result.type}\r\n                            interest={result.interest}\r\n                            setInterest={this.getSetInterest(index)}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <input className='GoBackButton' type='button' value='Go Back' onClick={this.goBack}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}