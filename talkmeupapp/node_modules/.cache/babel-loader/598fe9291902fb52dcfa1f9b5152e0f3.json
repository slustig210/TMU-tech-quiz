{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lsslg\\\\Desktop\\\\talkmeupapp\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js';\nimport ResultsPage from './ResultsPage.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n\n    this.state = {\n      curPage: 'search',\n      interests: {},\n      searchedTerm: \"\"\n    };\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.showInterest = this.showInterest.bind(this);\n    this.removeInterest = this.removeInterest.bind(this);\n  }\n\n  searchForTerm(term) {\n    // results have properties\n    // src: link to the image/video\n    // type: \"image\" or \"video\"\n    // interest: bool\n    const results = [];\n    this.setState({\n      curPage: 'results',\n      results: results,\n      searchedTerm: term\n    });\n  } // showIntererst\n  // adds the link to the interests object in an array with key term\n  // return true iff state updated\n\n\n  showInterest(term, link) {\n    let newInterests = undefined;\n\n    if (this.state.interests[term] === undefined) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n\n      newInterests[term] = [link];\n    } else if (!this.state.interests[term].includes(link)) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n\n      newInterests[term].push(link);\n    } else {\n      return false;\n    }\n\n    this.setState({\n      interests: newInterests\n    });\n    return true;\n  } // removes the link from the interests obj, if it exists\n  // return true iff the object was updated\n\n\n  removeInterest(term, link) {\n    const inters = this.state.interests;\n\n    if (inters[term] !== undefined) {\n      const index = inters[term].indexOf(link);\n\n      if (index !== -1) {\n        const newInterests = Object.assign({}, inters);\n        const newArr = newInterests[term].slice();\n        newArr.splice(index, 1); // delete the link\n\n        if (newArr.length === 0) {\n          delete newInterests[term]; // remove the term from the interests obj\n        } else {\n          newInterests[term] = newArr;\n        }\n\n        this.setState({\n          interests: newInterests\n        });\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    switch (this.state.curPage) {\n      default:\n        this.setState({\n          curPage: 'search'\n        });\n      // falls through\n\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(SearchPage, {\n          searchForTerm: this.searchForTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this);\n\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(ResultsPage, {\n          searchedTerm: this.state.searchedTerm,\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/App.js"],"names":["React","SearchPage","ResultsPage","App","Component","constructor","props","state","curPage","interests","searchedTerm","searchForTerm","bind","showInterest","removeInterest","term","results","setState","link","newInterests","undefined","Object","assign","includes","push","inters","index","indexOf","newArr","slice","splice","length","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js'\nimport ResultsPage from './ResultsPage.js'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n    this.state = {curPage: 'search', interests: {}, searchedTerm: \"\"};\n\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.showInterest = this.showInterest.bind(this);\n    this.removeInterest = this.removeInterest.bind(this);\n  }\n\n  searchForTerm(term) {\n    // results have properties\n    // src: link to the image/video\n    // type: \"image\" or \"video\"\n    // interest: bool\n    const results = [];\n    this.setState({curPage: 'results', results: results, searchedTerm: term});\n  }\n\n  // showIntererst\n  // adds the link to the interests object in an array with key term\n  // return true iff state updated\n  showInterest(term, link) {\n    let newInterests = undefined;\n    if (this.state.interests[term] === undefined) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n      newInterests[term] = [link];\n    } else if (!this.state.interests[term].includes(link)) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n      newInterests[term].push(link);\n    } else {\n      return false;\n    }\n\n    this.setState({interests: newInterests});\n    return true;\n  }\n\n  // removes the link from the interests obj, if it exists\n  // return true iff the object was updated\n  removeInterest(term, link) {\n    const inters = this.state.interests;\n    if (inters[term] !== undefined) {\n      const index = inters[term].indexOf(link);\n      if (index !== -1) {\n        const newInterests = Object.assign({}, inters);\n        const newArr = newInterests[term].slice();\n        newArr.splice(index, 1); // delete the link\n        if (newArr.length === 0) {\n          delete newInterests[term]; // remove the term from the interests obj\n        } else {\n          newInterests[term] = newArr;\n        }\n\n        this.setState({interests: newInterests});\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    switch(this.state.curPage) {\n      default:\n        this.setState({curPage: 'search'});\n        // falls through\n      case 'search':\n        return <SearchPage searchForTerm={this.searchForTerm}/>;\n      case 'results':\n        return <ResultsPage searchedTerm={this.state.searchedTerm} results={this.state.results}/>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}