{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lsslg\\\\Desktop\\\\talkmeupapp\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js';\nimport ResultsPage from './ResultsPage.js';\nconst GOOGLE_API_KEY = 'AIzaSyAM0zBXsd42sz2F_EcHnQMfr09CJ0pirlY'; // would make this an env var in a bigger project\n\nconst GOOGLE_CX = 'c55eb86d669bd3886'; // would make this an env var in a bigger project\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n\n    this.state = {\n      curPage: 'search',\n      interests: {},\n      searchedTerm: \"\"\n    };\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.showInterest = this.showInterest.bind(this);\n    this.removeInterest = this.removeInterest.bind(this);\n  }\n\n  searchForTerm(term) {\n    // results properties:\n    // src: link to the image/video\n    // type: \"image\" or \"video\"\n    // interest: bool\n    console.log(\"Searching for \" + term); // TODO finish search for term\n    // image custom search engine\n    // looking for medium sized images\n    // for some reason the google API uses http2\n    // and that is not usable by an app created by create-react-app,\n    // so i will hand the http request directly (sad)\n\n    const req = new XMLHttpRequest();\n    req.open(\"GET\", \"https://customsearch.googleapis.com/customsearch/v1\");\n\n    req.onload = e => {\n      console.log(e);\n      const results = [];\n      const linksWithInterest = this.state.interests[term];\n\n      if (linksWithInterest !== undefined) {\n        results.forEach(result => result.interest = linksWithInterest.includes(result.src));\n      }\n\n      this.setState({\n        curPage: 'results',\n        results: results,\n        searchedTerm: term\n      });\n    };\n\n    req.onerror = function (e) {\n      console.error(req.statusText);\n      this.setState({\n        curPage: 'search'\n      });\n    };\n\n    req.send();\n  } // showIntererst\n  // adds the link to the interests object in an array with key term\n  // return true iff state updated\n  // does not affect this.state.results\n\n\n  showInterest(link) {\n    console.log('adding interest of ' + link);\n    let newInterests = undefined;\n\n    if (this.state.interests[this.state.searchedTerm] === undefined) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n\n      newInterests[this.state.searchedTerm] = [link];\n    } else if (!this.state.interests[this.state.searchedTerm].includes(link)) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n\n      newInterests[this.state.searchedTerm].push(link);\n    } else {\n      return false;\n    }\n\n    this.setState({\n      interests: newInterests\n    });\n    return true;\n  } // removes the link from the interests obj, if it exists\n  // return true iff the object was updated\n  // does not affect this.state.results\n\n\n  removeInterest(link) {\n    console.log('removing interest of ' + link);\n    const inters = this.state.interests;\n\n    if (inters[this.state.searchedTerm] !== undefined) {\n      const index = inters[this.state.searchedTerm].indexOf(link);\n\n      if (index !== -1) {\n        const newInterests = Object.assign({}, inters);\n        const newArr = newInterests[this.state.searchedTerm].slice(); // copy the array\n\n        newArr.splice(index, 1); // delete the link from the array\n\n        if (newArr.length === 0) {\n          delete newInterests[this.state.searchedTerm]; // remove the term from the interests obj if the array is empty\n        } else {\n          newInterests[this.state.searchedTerm] = newArr;\n        }\n\n        this.setState({\n          interests: newInterests\n        });\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    switch (this.state.curPage) {\n      default:\n        console.log('Unknown page ' + this.state.curPage);\n        this.setState({\n          curPage: 'search'\n        });\n      // falls through\n\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SearchPage, {\n            searchForTerm: this.searchForTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"InterestsButton\",\n            type: \"button\",\n            value: \"Get Interests (JSON)\",\n            onClick: event => this.setState({\n              curPage: 'interests'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this);\n\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ResultsPage, {\n            searchedTerm: this.state.searchedTerm,\n            results: this.state.results,\n            showInterest: this.showInterest,\n            removeInterest: this.removeInterest,\n            goBack: () => this.setState({\n              curPage: 'search'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this);\n\n      case 'interests':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: JSON.stringify(this.state.interests)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"GoBackButton\",\n            type: \"button\",\n            value: \"Go Back\",\n            onClick: () => this.setState({\n              curPage: 'search'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lsslg/Desktop/talkmeupapp/src/App.js"],"names":["React","SearchPage","ResultsPage","GOOGLE_API_KEY","GOOGLE_CX","App","Component","constructor","props","state","curPage","interests","searchedTerm","searchForTerm","bind","showInterest","removeInterest","term","console","log","req","XMLHttpRequest","open","onload","e","results","linksWithInterest","undefined","forEach","result","interest","includes","src","setState","onerror","error","statusText","send","link","newInterests","Object","assign","push","inters","index","indexOf","newArr","slice","splice","length","render","event","JSON","stringify"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SearchPage from './SearchPage.js'\nimport ResultsPage from './ResultsPage.js'\n\nconst GOOGLE_API_KEY = 'AIzaSyAM0zBXsd42sz2F_EcHnQMfr09CJ0pirlY' // would make this an env var in a bigger project\nconst GOOGLE_CX = 'c55eb86d669bd3886' // would make this an env var in a bigger project\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // interests is an object with key=searched term and\n    // value=links that the user said they were interested in\n    this.state = {curPage: 'search', interests: {}, searchedTerm: \"\"};\n\n    this.searchForTerm = this.searchForTerm.bind(this);\n    this.showInterest = this.showInterest.bind(this);\n    this.removeInterest = this.removeInterest.bind(this);\n  }\n\n  searchForTerm(term) {\n    // results properties:\n    // src: link to the image/video\n    // type: \"image\" or \"video\"\n    // interest: bool\n    console.log(\"Searching for \" + term);\n    // TODO finish search for term\n    // image custom search engine\n    // looking for medium sized images\n    // for some reason the google API uses http2\n    // and that is not usable by an app created by create-react-app,\n    // so i will hand the http request directly (sad)\n    const req = new XMLHttpRequest();\n    req.open(\"GET\", \"https://customsearch.googleapis.com/customsearch/v1\")\n    \n    req.onload = e => {\n      console.log(e);\n      const results = [];\n\n      const linksWithInterest = this.state.interests[term];\n      if (linksWithInterest !== undefined) {\n        results.forEach(result => result.interest = linksWithInterest.includes(result.src));\n      }\n      this.setState({curPage: 'results', results: results, searchedTerm: term});\n    }\n\n    req.onerror = function(e) {\n      console.error(req.statusText);\n      this.setState({curPage: 'search'});\n    }\n\n    req.send();\n  }\n\n  // showIntererst\n  // adds the link to the interests object in an array with key term\n  // return true iff state updated\n  // does not affect this.state.results\n  showInterest(link) {\n    console.log('adding interest of ' + link);\n    let newInterests = undefined;\n\n    if (this.state.interests[this.state.searchedTerm] === undefined) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n      newInterests[this.state.searchedTerm] = [link];\n\n    } else if (!this.state.interests[this.state.searchedTerm].includes(link)) {\n      newInterests = Object.assign({}, this.state.interests); // copy interests\n      newInterests[this.state.searchedTerm].push(link);\n\n    } else {\n      return false;\n    }\n\n    this.setState({interests: newInterests});\n    return true;\n  }\n\n  // removes the link from the interests obj, if it exists\n  // return true iff the object was updated\n  // does not affect this.state.results\n  removeInterest(link) {\n    console.log('removing interest of ' + link);\n    const inters = this.state.interests;\n\n    if (inters[this.state.searchedTerm] !== undefined) {\n\n      const index = inters[this.state.searchedTerm].indexOf(link);\n      if (index !== -1) {\n        const newInterests = Object.assign({}, inters);\n        const newArr = newInterests[this.state.searchedTerm].slice(); // copy the array\n        newArr.splice(index, 1);                                      // delete the link from the array\n        if (newArr.length === 0) {\n          delete newInterests[this.state.searchedTerm];               // remove the term from the interests obj if the array is empty\n        } else {\n          newInterests[this.state.searchedTerm] = newArr;\n        }\n\n        this.setState({interests: newInterests,});\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    switch(this.state.curPage) {\n      default:\n        console.log('Unknown page ' + this.state.curPage);\n        this.setState({curPage: 'search'});\n        // falls through\n      case 'search':\n        return (\n          <div>\n            <SearchPage searchForTerm={this.searchForTerm}/>\n            <input className=\"InterestsButton\" type='button' value='Get Interests (JSON)' onClick={event => this.setState({curPage: 'interests'})}/>\n          </div>\n        );\n      case 'results':\n        return (\n          <div>\n            <ResultsPage\n              searchedTerm={this.state.searchedTerm}\n              results={this.state.results}\n              showInterest={this.showInterest}\n              removeInterest={this.removeInterest}\n              goBack={() => this.setState({curPage: 'search'})}\n            />\n          </div>\n        );\n      case 'interests':\n        return (\n          <div>\n            <div>\n              <code>{JSON.stringify(this.state.interests)}</code>\n            </div>\n            <input className=\"GoBackButton\" type='button' value='Go Back' onClick={() => this.setState({curPage: 'search'})}/>\n          </div>\n        );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}